// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// UtilPortscanResultDao is the data access object for table util_portscan_result.
type UtilPortscanResultDao struct {
	table   string                    // table is the underlying table name of the DAO.
	group   string                    // group is the database configuration group name of current DAO.
	columns UtilPortscanResultColumns // columns contains all the column names of Table for convenient usage.
}

// UtilPortscanResultColumns defines and stores column names for table util_portscan_result.
type UtilPortscanResultColumns struct {
	Id            string //
	CusName       string //
	Host          string //
	Port          string //
	ServiceName   string //
	VendorProduct string //
	Version       string //
	Flag          string //
	NsqFlag       string //
	HttpFlag      string //
	Url           string //
	Code          string //
	Title         string //
	CreateAt      string //
}

// utilPortscanResultColumns holds the columns for table util_portscan_result.
var utilPortscanResultColumns = UtilPortscanResultColumns{
	Id:            "id",
	CusName:       "cus_name",
	Host:          "host",
	Port:          "port",
	ServiceName:   "service_name",
	VendorProduct: "vendor_product",
	Version:       "version",
	Flag:          "flag",
	NsqFlag:       "nsq_flag",
	HttpFlag:      "http_flag",
	Url:           "url",
	Code:          "code",
	Title:         "title",
	CreateAt:      "create_at",
}

// NewUtilPortscanResultDao creates and returns a new DAO object for table data access.
func NewUtilPortscanResultDao() *UtilPortscanResultDao {
	return &UtilPortscanResultDao{
		group:   "default",
		table:   "util_portscan_result",
		columns: utilPortscanResultColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *UtilPortscanResultDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *UtilPortscanResultDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *UtilPortscanResultDao) Columns() UtilPortscanResultColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *UtilPortscanResultDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *UtilPortscanResultDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *UtilPortscanResultDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
